class Paciente:
    def __init__(self, nombre, dni):
        self.nombre = nombre
        self.dni = dni

    def __str__(self):
        return f"Paciente: {self.nombre}, DNI: {self.dni}"


class Turno:
    def __init__(self, paciente, fecha, hora):
        self.paciente = paciente
        self.fecha = fecha
        self.hora = hora

    def __str__(self):
        return f"Turno: {self.fecha} a las {self.hora} - {self.paciente}"


class Clinica:
    def __init__(self):
        self.turnos = []  # Lista para almacenar los turnos

    def agregar_turno(self, paciente, fecha, hora):
        nuevo_turno = Turno(paciente, fecha, hora)
        self.turnos.append(nuevo_turno)
        print(f"Turno agregado: {nuevo_turno}")

    def mostrar_turnos(self):
        if not self.turnos:
            print("No hay turnos agendados.")
            return
        print("Lista de turnos:")
        for turno in self.turnos:
            print(turno)

    def consultar_turno(self, dni):
        for turno in self.turnos:
            if turno.paciente.dni == dni:
                print(turno)
                return
        print("No se encontró un turno para el DNI proporcionado.")


# Ejemplo de uso
if __name__ == "__main__":
    clinica = Clinica()

    # Crear pacientes
    paciente1 = Paciente("Juan Pérez", "12345678")
    paciente2 = Paciente("Ana Gómez", "87654321")

    # Agregar turnos
    clinica.agregar_turno(paciente1, "2023-10-01", "10:00")
    clinica.agregar_turno(paciente2, "2023-10-02", "11:00")

    # Mostrar todos los turnos
    clinica.mostrar_turnos()

    # Consultar un turno por DNI
    clinica.consultar_turno("12345678")
    clinica.consultar_turno("00000000")  # DNI no existente
